<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:Firma.ViewModels"
                    xmlns:vw="clr-namespace:Firma.Views"
                    >

    <!--tu bedziemy laczyc View z ViewModel zakladek-->
    <DataTemplate DataType="{x:Type vm:WszystkieTowaryViewModel}">
        <vw:WszystkieTowaryView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:NowyTowarViewModel}">
        <vw:NowyTowarView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:NowaFakturaViewModel}">
        <vw:NowaFakturaView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszystkieFakturyViewModel}">
        <vw:WszystkieFakturyView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:NowyPracownikViewModel}">
        <vw:NowyPracownikView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:WszyscyPracownicyViewModel}">
        <vw:WszyscyPracownicyView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:PrzyjecieViewModel}">
        <vw:PrzyjecieView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WydanieViewModel}">
        <vw:WydanieView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NowaWyplataViewModel}">
        <vw:NowaWyplataView/>
    </DataTemplate>
    <!--tu jest koniec laczenia View z ViewModel zakladek-->

    
    <!--Style przeniesiony w górę, aby móc z niego korzystać w głównych resources okna-->
    <Style x:Key="TBBezRamki" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#899878"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonMenuBoczne" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#899878"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Resources głównego okna-->
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
                This template ensures that content of a HeaderedContentControl 
                fills the available vertical space. 
                -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
                        DockPanel.Dock="Top"
                        ContentSource="Header"
                        ContentTemplate="{TemplateBinding HeaderTemplate}" 
                        />
                        <ContentPresenter 
                        ContentSource="Content" 
                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                        />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    This style ensures that the borders in the main window are consistent.
    -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
    This template explains how to render the list of commands on the left
    side in the main window (the 'Control Panel' area).
    -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Command="{Binding Path=Command}" Style="{StaticResource ButtonMenuBoczne}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding NazwaIkony}" Height="25" Width="25" Margin="0, 0, 5, 0"/>
                            <TextBlock Text="{Binding DisplayName}" Height="25" Margin="0, 7, 0, 0"/>
                        </StackPanel>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <ToggleButton 
            Command="{Binding Path=CloseCommand}"
            Content="X"
            Cursor="Hand"
            DockPanel.Dock="Right"
            Focusable="False"
            FontFamily="Courier" 
            FontSize="9"
            FontWeight="Bold"  
            Margin="0,1,0,0"
            Padding="0"
            VerticalContentAlignment="Center"
            Width="16" Height="16"
            Style="{StaticResource TBBezRamki}"
            />
            <ContentPresenter 
                Content="{Binding Path=DisplayName}" 
                VerticalAlignment="Center"
                />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
            IsSynchronizedWithCurrentItem="True" 
            ItemsSource="{Binding}" 
            ItemTemplate="{StaticResource ClosableTabItemTemplate}"
            Margin="4"
      />
    </DataTemplate>

    
    
    <!--Ustawienie wyglądu pomniejszych kontrolek-->
    <Style x:Key="{x:Type ToolBar}" TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="#E4E6C3"/>
    </Style>

    <Style x:Key="{x:Type StatusBar}" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="#E4E6C3"/>
    </Style>


    <Style x:Key="TextBlockStandard" TargetType="TextBlock">
        <Setter Property="Margin" Value="2"/>
    </Style>

    <Style x:Key="TBMenu" BasedOn="{StaticResource TBBezRamki}" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="PopUp" TargetType="Popup">
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="Placement" Value="Top"/>
    </Style>
    
    <Style x:Key="BorderPopUP" TargetType="Border">
        <Setter Property="Background" Value="#E4E6C3"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="White"/>
    </Style>

</ResourceDictionary>